import * as UCAN from '@ipld/dag-ucan'
import { DID, Link, Delegation, Signature, Block } from '@ucanto/interface'
import { UnknownLink } from 'multiformats'
import { Kinesis } from '@aws-sdk/client-kinesis'


export interface UcanLogCtx extends InvocationsCarCtx, ReceiptBlockCtx {
  basicAuth: string
}

export interface UcanStreamCtx {
  streamName: string
  kinesisClient?: Kinesis
}

export interface InvocationsCarCtx extends UcanStreamCtx {
  storeBucket: UcanBucket
  
}

export interface ReceiptBlockCtx extends UcanStreamCtx {
  storeBucket: UcanBucket
}

export interface UcanBucket {
  putCar: (carCid: string, bytes: Uint8Array) => Promise<void>
  putInvocation: (invocationCid: string, carCid: string) => Promise<void>
  putReceipt: (invocationCid: string, receiptCid: string, bytes: Uint8Array) => Promise<void>
  getCarBytesForInvocation: (invocationCid: string) => Promise<Uint8Array|undefined>
}

export interface UcanInvocation {
  att: UCAN.Capabilities
  aud: `did:${string}:${string}`
  iss: `did:${string}:${string}`
  cid: string
}

export interface InvocationsCar {
  cid: UnknownLink
  bytes: Uint8Array
  invocations: UcanInvocation[]
}

// TODO: Remove once in ucanto
export interface Receipt {
  ran: Link
  out: ReceiptResult
  meta: Record<string, unknown>
  iss?: DID
  prf?: Array<Link<Delegation>>
  s: Signature
}

// TODO: Remove once in ucanto
export interface ReceiptBlock extends Block<Receipt> {
  data: Receipt
}

// TODO: Remove once in ucanto
/**
 * Defines result type as per invocation spec
 *
 * @see https://github.com/ucan-wg/invocation/#6-result
 */
export type ReceiptResult<T = unknown, X extends {} = {}> = Variant<{
  ok: T
  error: X
}>

// TODO: Remove once in ucanto
export type Variant<U extends Record<string, unknown>> = {
  [Key in keyof U]: { [K in Exclude<keyof U, Key>]?: never } & {
    [K in Key]: U[Key]
  }
}[keyof U]

// would be generated by sst, but requires `sst build` to be run, which calls out to aws; not great for CI
declare module '@serverless-stack/node/config' {
  export interface SecretResources {
    PRIVATE_KEY: {
      value: string
    },
    UCAN_INVOCATION_POST_BASIC_AUTH: {
      value: string
    }
  }
}

export {}
